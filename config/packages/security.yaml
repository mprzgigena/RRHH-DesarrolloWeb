# config/packages/security.yaml
security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # 1. Configuración de proveedor: Cambiamos 'users_in_memory' a 'entity' para usar la tabla User.
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email # Usamos el email como nombre de usuario (username)
        # used to reload user from session & other features (e.g. switch_user)
    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        main:
            lazy: true
            # 2. Asignamos el proveedor 'app_user_provider' a este firewall.
            provider: app_user_provider
            
            # 3. Configuración del formulario de login
            form_login:
                login_path: app_login
                check_path: app_login
                # Redirección después del login exitoso, como en la captura de pantalla del profesor.
                default_target_path: app_perfil
                enable_csrf: true
            
            # Configuración para cerrar sesión
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

    # 4. Control de acceso: Añadimos las restricciones de acceso como en la captura de pantalla.
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Acceso restringido a rutas de perfil/administración/reportes para ROLE_ADMIN
        - { path: '^/perfil', roles: ROLE_ADMIN }
        - { path: '^/asistencia/admin', roles: ROLE_ADMIN }
        - { path: '^/register', roles: ROLE_ADMIN }
        - { path: '^/reporte', roles: ROLE_ADMIN }
        
        # Otorga acceso a /area a usuarios con ROLE_USER (o ROLE_ADMIN)
        - { path: '^/area', roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # ... (configuración para tests, sin cambios necesarios) ...
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon